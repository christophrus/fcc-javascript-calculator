{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","beginsWithOperator","endsWithOperator","props","_this","Object","D_web_fcc_javascript_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_web_fcc_javascript_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_web_fcc_javascript_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","equation","equationMemory","display","bracketsOpened","bracketsClosed","handleDigit","bind","D_web_fcc_javascript_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","handleOperator","handleDecimal","handleEquals","handleClear","test","setState","e","replace","target","innerHTML","i","result","eval","react__WEBPACK_IMPORTED_MODULE_6___default","id","className","onClick","Component"],"mappings":"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","file":"static/js/main.87749430.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\nimport './App.css';\n\n\nconst beginsWithOperator = /^(\\+|-|x|÷)/;\nconst endsWithOperator = /(\\+|-|x|÷)$/;\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      equation: '',\n      equationMemory: '',\n      display: '0',\n      bracketsOpened: 0,\n      bracketsClosed: 0\n    };\n\n    this.handleDigit = this.handleDigit.bind(this);\n    this.handleOperator = this.handleOperator.bind(this);\n    this.handleDecimal = this.handleDecimal.bind(this);\n    this.handleEquals = this.handleEquals.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n\n  }\n\n  handleDecimal() {\n    if (!(/\\./).test(this.state.display) && ! (/=/).test(this.state.equation)) {\n      this.setState({\n        display: this.state.display + '.'\n      })\n    }\n  }\n\n  handleOperator(e) {\n\n    let equation = this.state.display === 'ERROR' ? '' : this.state.equation;\n\n    equation = endsWithOperator.test(equation) ? equation.replace(endsWithOperator, e.target.innerHTML) : (/=/).test(equation) ? this.state.equationMemory + e.target.innerHTML : equation + e.target.innerHTML;\n\n    this.setState({\n      equation: equation,\n      equationMemory: equation,\n      display: e.target.innerHTML\n    })\n\n  }\n\n  handleEquals() {\n\n    if (!(/=/).test(this.state.equation)) {\n      let equation = this.state.equation;\n      equation = equation.replace(endsWithOperator, '');\n\n      for(let i=0; i < this.state.bracketsOpened - this.state.bracketsClosed; i++) {\n        equation += \")\";\n      }\n\n      try {\n        // eslint-disable-next-line no-eval\n        let result = eval(equation.replace('÷', '/').replace(\"x\", '*'));\n        this.setState({\n          equation: equation + \"=\" + result,\n          equationMemory: result,\n          display: result,\n          bracketsOpened: 0,\n          bracketsClosed: 0\n        })\n      } catch(e) {\n        this.setState({\n          bracketsOpened: 0,\n          bracketsClosed: 0,\n          display: 'ERROR'\n        })\n      }\n\n    }\n\n  }\n\n  handleDigit(e){\n\n    if (e.target.innerHTML === \")\" && this.state.bracketsOpened === this.state.bracketsClosed) return;\n\n    let display = this.state.display;\n    let equation = this.state.equation;\n    let equationMemory = this.state.equationMemory;\n\n    if ((/=/).test(equation) || display === 'ERROR') {\n      equation = '';\n      equationMemory = '';\n      display = '0';\n    }\n\n    if (display === \"0\" && e.target.innerHTML === \"0\") return;\n    display = ((display === \"0\" && e.target.innerHTML !== \"0\") || beginsWithOperator.test(display)) ? e.target.innerHTML : display + e.target.innerHTML;\n    equation = equationMemory + display;\n\n    this.setState({\n      equation: equation,\n      equationMemory: equationMemory,\n      display: display,\n      bracketsOpened: e.target.innerHTML === \"(\" ? this.state.bracketsOpened + 1 : this.state.bracketsOpened,\n      bracketsClosed: e.target.innerHTML === \")\" ? this.state.bracketsClosed + 1 : this.state.bracketsClosed\n    })\n  }\n\n  handleClear() {\n\n    this.setState({\n      equation: '',\n      equationMemory: '',\n      display: '0',\n      bracketsOpened: 0,\n      bracketsClosed: 0\n    })\n\n  }\n\n\n  render() {\n    return (\n      <main>\n        <div id=\"calculator\">\n          <div id=\"display\"><span>{this.state.display}</span></div>\n          <div id=\"equation\"><span>{this.state.equation}</span></div>\n          <button className=\"light-grey\" id=\"zero\" onClick={this.handleDigit}>0</button>\n          <button className=\"light-grey\" id=\"one\" onClick={this.handleDigit}>1</button>\n          <button className=\"light-grey\" id=\"two\" onClick={this.handleDigit}>2</button>\n          <button className=\"light-grey\" id=\"three\" onClick={this.handleDigit}>3</button>\n          <button className=\"light-grey\" id=\"four\" onClick={this.handleDigit}>4</button>\n          <button className=\"light-grey\" id=\"five\" onClick={this.handleDigit}>5</button>\n          <button className=\"light-grey\" id=\"six\" onClick={this.handleDigit}>6</button>\n          <button className=\"light-grey\" id=\"seven\" onClick={this.handleDigit}>7</button>\n          <button className=\"light-grey\" id=\"eight\" onClick={this.handleDigit}>8</button>\n          <button className=\"light-grey\" id=\"nine\" onClick={this.handleDigit}>9</button>\n          <button className=\"grey\" id=\"add\" onClick={this.handleOperator}>+</button>\n          <button className=\"grey\" id=\"subtract\" onClick={this.handleOperator}>-</button>\n          <button className=\"grey\" id=\"multiply\" onClick={this.handleOperator}>x</button>\n          <button className=\"grey\" id=\"divide\" onClick={this.handleOperator}>÷</button>\n          <button className=\"blue\" id=\"equals\" onClick={this.handleEquals}>=</button>\n          <button className=\"grey\" id=\"decimal\" onClick={this.handleDecimal}>.</button>\n          <button className=\"grey\" id=\"bracket-open\" onClick={this.handleDigit}>(</button>\n          <button className=\"grey\" id=\"bracket-close\" onClick={this.handleDigit}>)</button>\n          <button className=\"grey\" id=\"clear\" onClick={this.handleClear}>AC</button>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n"],"sourceRoot":""}